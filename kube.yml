#apiVersion: v1
#kind: ConfigMap
#metadata:
#  name: api.cfg
#data:
#  config.yml: |
#    address: ":9000"
#    trusted_proxies: [ ]
#    name: <app name>
#    key: <a key of length 32>
#    database:
#      uri: mongodb://<username>:<password>@<host>:<port>/<database>?authSource=<authSource>
#      dbName: <database>
#    redis:
#      uri: redis://<user>:<password>@<host>:<port>/<db_number>
#    nats:
#      hosts:
#        - <nats/tls>://<host1>:<port/4222>
#        - <nats/tls>://<host2>:<port/4222>
#        - <nats/tls>://<host3>:<port/4222>
#      nkey: <seed>
#    cors:
#      allowOrigins:
#        - https://app.developer.com
#      allowMethods:
#        - POST
#      allowHeaders:
#        - Content-Type
#        - Accept
#      allowCredentials: true
#      maxAge: 7200
#    passport:
#      aud: [ 'console' ]
#      exp: 720
#    engines:
#      users:
#        projection:
#          password: 0
#    qcloud:
#      secret_id: <secret_id>
#      secret_key: <secret_key>
#      cos:
#        bucket: examplebucket-1250000000
#        region: ap-guangzhou
#        expired: 300
#---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: api
  name: api-deploy
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - image: ghcr.io/weplanx/api:latest
          imagePullPolicy: Always
          name: api
          ports:
            - containerPort: 9000
          volumeMounts:
            - name: config
              mountPath: "/app"
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: api.cfg
            items:
              - key: "config.yml"
                path: "config.yml"
      nodeSelector:
        type: compute
---
apiVersion: v1
kind: Service
metadata:
  name: api-svc
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 9000
  selector:
    app: api
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api
  annotations:
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.tls.certresolver: kainonly
    traefik.ingress.kubernetes.io/router.tls.domains.0.main: kainonly.com
    traefik.ingress.kubernetes.io/router.tls.domains.0.sans: "*.kainonly.com"
spec:
  rules:
    - host: api.kainonly.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: api-svc
                port:
                  number: 80