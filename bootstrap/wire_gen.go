// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package bootstrap

import (
	"github.com/weplanx/server/api"
	"github.com/weplanx/server/api/index"
	"github.com/weplanx/server/common"
	"github.com/weplanx/utils/kv"
	"github.com/weplanx/utils/sessions"
)

// Injectors from wire.go:

func NewAPI(values *common.Values) (*api.API, error) {
	db, err := UseDatabase(values)
	if err != nil {
		return nil, err
	}
	client, err := UseRedis(values)
	if err != nil {
		return nil, err
	}
	conn, err := UseNats(values)
	if err != nil {
		return nil, err
	}
	jetStreamContext, err := UseJetStream(conn)
	if err != nil {
		return nil, err
	}
	keyValue, err := UseKeyValue(values, jetStreamContext)
	if err != nil {
		return nil, err
	}
	inject := &common.Inject{
		Values:    values,
		Db:        db,
		Redis:     client,
		Nats:      conn,
		JetStream: jetStreamContext,
		KeyValue:  keyValue,
	}
	hertz, err := UseHertz(values)
	if err != nil {
		return nil, err
	}
	passport := UsePassport(values)
	locker := UseLocker(values, client)
	captcha := UseCaptcha(values, client)
	sessionsSessions := UseSessions(values, client)
	service := &sessions.Service{
		Sessions: sessionsSessions,
	}
	indexService := &index.Service{
		Inject:          inject,
		Passport:        passport,
		Locker:          locker,
		Captcha:         captcha,
		SessionsService: service,
	}
	controller := &index.Controller{
		IndexService: indexService,
	}
	kvKV := UseKV(values, keyValue)
	kvService := &kv.Service{
		KV: kvKV,
	}
	kvController := &kv.Controller{
		KVService: kvService,
	}
	sessionsController := &sessions.Controller{
		SessionsService: service,
	}
	apiAPI := &api.API{
		Inject:   inject,
		Hertz:    hertz,
		Index:    controller,
		KV:       kvController,
		Sessions: sessionsController,
	}
	return apiAPI, nil
}
