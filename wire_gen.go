// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"lab-api/app"
	"lab-api/app/api"
	"lab-api/app/api/controller"
	"lab-api/app/api/service"
	"lab-api/app/system"
	controller2 "lab-api/app/system/controller"
	service2 "lab-api/app/system/service"
	"lab-api/bootstrap"
	"lab-api/common"
)

// Injectors from wire.go:

func App(config common.Config) (*app.App, error) {
	engine := bootstrap.HttpServer(config)
	db, err := bootstrap.InitializeDatabase(config)
	if err != nil {
		return nil, err
	}
	client, err := bootstrap.InitializeRedis(config)
	if err != nil {
		return nil, err
	}
	dependency := &service.Dependency{
		Db:    db,
		Redis: client,
	}
	index := service.NewIndex(dependency)
	controllerDependency := &controller.Dependency{
		IndexService: index,
	}
	controllerIndex := controller.NewIndex(controllerDependency)
	apiDependency := &api.Dependency{
		Index: controllerIndex,
	}
	routes := api.NewRoutes(engine, apiDependency)
	cookie := bootstrap.InitializeCookie(config)
	authx := bootstrap.InitializeAuthx(config)
	cipher, err := bootstrap.InitializeCipher(config)
	if err != nil {
		return nil, err
	}
	serviceDependency := &service2.Dependency{
		Config: config,
		Db:     db,
		Redis:  client,
	}
	serviceIndex := service2.NewIndex(serviceDependency)
	resource := service2.NewResource(serviceDependency)
	admin := service2.NewAdmin(serviceDependency)
	dependency2 := &controller2.Dependency{
		Db:              db,
		Cookie:          cookie,
		Cipher:          cipher,
		IndexService:    serviceIndex,
		ResourceService: resource,
		AdminService:    admin,
	}
	index2 := controller2.NewIndex(dependency2, authx)
	dependency3 := controller2.Dependency{
		Db:              db,
		Cookie:          cookie,
		Cipher:          cipher,
		IndexService:    serviceIndex,
		ResourceService: resource,
		AdminService:    admin,
	}
	controllerResource := controller2.NewResource(dependency3)
	role := controller2.NewRole(dependency3)
	controllerAdmin := controller2.NewAdmin(dependency2)
	systemDependency := &system.Dependency{
		Config:   config,
		Cookie:   cookie,
		Authx:    authx,
		Index:    index2,
		Resource: controllerResource,
		Role:     role,
		Admin:    controllerAdmin,
	}
	systemRoutes := system.NewRoutes(engine, systemDependency)
	appApp := app.NewApp(engine, routes, systemRoutes)
	return appApp, nil
}
